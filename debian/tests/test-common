# -*- mode: sh -*-

if [ -n "${AUTOPKGTEST_TMP}" ]; then
	export TMPDIR="${AUTOPKGTEST_TMP}"
fi

# Skeleton configuration directory
CONFDIR="$(mktemp -d)"
touch "${CONFDIR}/initramfs.conf"
touch "${CONFDIR}/modules"
mkdir "${CONFDIR}/scripts"

# initramfs image file
INITRAMFS="$(mktemp)"

# root disk image file
ROOTDISK="$(mktemp)"

# root disk interface type (for qemu) and device name (for Linux)
test -n "${ROOTDISK_QEMU_IF}" || ROOTDISK_QEMU_IF=virtio
test -n "${ROOTDISK_LINUX_NAME}" || ROOTDISK_LINUX_NAME=vda

# Create a root fs with a trivial userspace
ROOTDIR="$(mktemp -d)"
INIT_MESSAGE='root fs init system started successfully'
for subdir in bin dev lib proc run sbin sys; do
	mkdir "${ROOTDIR}/${subdir}"
done
cat >"${ROOTDIR}/sbin/init" <<EOF
#!/bin/sh -e
test -b /dev/${ROOTDISK_LINUX_NAME}
echo '${INIT_MESSAGE}'
poweroff
EOF
chmod a+x "${ROOTDIR}/sbin/init"
cp /usr/lib/klibc/bin/sh.shared "${ROOTDIR}/bin/sh"
cp /usr/lib/klibc/bin/poweroff "${ROOTDIR}/bin/poweroff"
cp "$(dpkg -L libklibc | grep '^/lib/klibc.*\.so$')" "${ROOTDIR}/lib/"

# Kernel version (really release) string
if [ -z "${LOCALVERSION}" ]; then
	echo >&2 "E: Test must set LOCALVERSION to the kernel version suffix, e.g. -amd64"
	exit 2
fi
KVER="$(dpkg-query -Wf '${Depends}' "linux-image${LOCALVERSION}" | sed 's/^linux-image-//')"

# VM output file
OUTPUT="$(mktemp)"

build_initramfs() {
	mkinitramfs -d "${CONFDIR}" -o "${INITRAMFS}" "${KVER}"
}

build_rootfs_ext2() {
	# Get directory size
	local blocks="$(du --summarize "${ROOTDIR}" | cut -f 1)"
	local inodes="$(du --summarize --inodes "${ROOTDIR}" | cut -f 1)"

	# Add fudge factor
	blocks="$((blocks + blocks / 4))"
	inodes="$((inodes + 10))"

	genext2fs -b "${blocks}" -N "${inodes}" -U -d "${ROOTDIR}" "${ROOTDISK}"
}

run_qemu_amd64() {
	qemu-system-x86_64 -m 1G -drive "file=${ROOTDISK},if=${ROOTDISK_QEMU_IF},media=disk,format=raw" -nographic -no-reboot -kernel "/boot/vmlinuz-${KVER}" -initrd "${INITRAMFS}" -append "root=/dev/${ROOTDISK_LINUX_NAME} ro console=ttyS0,115200 panic=-1 " > "${OUTPUT}"
	grep -F "${INIT_MESSAGE}" "${OUTPUT}"
}
